<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.bnppa.ic.config</groupId>
        <artifactId>pom-global</artifactId>
        <version>4.2.2</version>
    </parent>

    <groupId>com.bnp</groupId>
    <artifactId>CSERVICES</artifactId>
    <version>1.0.0-0-SNAPSHOT</version>
    <!-- ARA Version must be : on the crud X.x.x-Y or X.x-Y where X is EAR version and Y the configuration version -->
    <packaging>pom</packaging>

    <distributionManagement>
        <repository>
            <id>BNPPA_REF</id><!-- this id must exist in your [MAVEN_HOME]/conf/settings.xml/servers/server -->
            <name>Release Repository</name>
            <url>${repo.internal.deploy.url}/BNPPA_REF</url>
        </repository>

        <snapshotRepository>
            <id>BNPPA_SNAPSHOT</id><!-- this id must exist in your [MAVEN_HOME]/conf/settings.xml/servers/server -->
            <name>Snapshot Repository</name>
            <url>${repo.snapshot.deploy.url}/BNPPA_SNAPSHOT</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <!-- Enable unit Test : please do not disable unit tests -->
        <test.junit.skip>false</test.junit.skip>

        <!-- COMPILER -->
        <jdk.home>${jdk.jse8-x64.sun.home}</jdk.home>
        <jdk.compiler.compilerVersion>1.8</jdk.compiler.compilerVersion>
        <maven.compiler.source>${jdk.compiler.compilerVersion}</maven.compiler.source>
        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>

        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- cinrj version -->
        <cinrj.version>5.10</cinrj.version>

        <!-- security version -->
        <security.version>1.0.1-0</security.version>

        <!-- Hibernate jar version -->
        <hibernate.version>5.2.14.Final</hibernate.version>

        <!-- DB jar version -->
        <h2.version>1.4.191</h2.version>
        <oracle.version>11.2.0.4</oracle.version>
        <bonecp.version>0.8.0.RELEASE</bonecp.version>
        <flyway.version>4.0.3</flyway.version>

        <!-- Spring jar version -->
        <spring.version>5.0.3.RELEASE</spring.version>
        <spring-boot.version>2.0.0.RELEASE</spring-boot.version>

        <!-- Gson version for json serializing -->
        <gson.version>2.8.1</gson.version>

        <!-- Log jar version -->
        <logback.version>1.2.3</logback.version>
        <slf4j.version>1.7.21</slf4j.version>

        <!-- checkstyle : We strongly advise to keep it -->
        <checkstyle.version>2.9</checkstyle.version>
        <checkstyle.directory>./checkstyle.xml</checkstyle.directory>

        <!-- servlet version -->
        <servlet.version>3.1.0</servlet.version>

        <!-- Test jar version -->
        <junit.version>4.12</junit.version>
        <mockito.version>1.10.19</mockito.version>
        <assertJ.version>2.8.0</assertJ.version>
        
		<classmate.version>1.3.4</classmate.version>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.dynamicAnalysis>true</sonar.dynamicAnalysis>
    </properties>

    <scm>
        <url>https://cip-gitlab-assurance.is.echonet/AP06578/java.angular-3-tiers-archetype.git</url>
        <connection>scm:git:git:the-url-to-your-repo-git.git</connection>
        <developerConnection>scm:git:git@the-url-to-your-repo-git.git</developerConnection>
    </scm>

    <dependencyManagement>
        <dependencies>
            <!-- Current project dependencies -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>CSERVICES_SERV</artifactId>
                <version>1.0.0-0-SNAPSHOT</version>
            </dependency>

            <!-- Security -->
            <dependency>
                <groupId>com.bpc.dreamteam</groupId>
                <artifactId>archetype-security-manager</artifactId>
                <version>${security.version}</version>
            </dependency>
            <dependency>
                <groupId>com.bpc.dreamteam</groupId>
                <artifactId>archetype-security-sesame-authentication-provider</artifactId>
                <version>${security.version}</version>
            </dependency>
            <dependency>
                <groupId>com.bpc.dreamteam</groupId>
                <artifactId>archetype-security-sesame-authentication-provider-mock</artifactId>
                <version>${security.version}</version>
            </dependency>
            <dependency>
                <groupId>com.bpc.dreamteam</groupId>
                <artifactId>archetype-security-generic-authentication-provider</artifactId>
                <version>${security.version}</version>
            </dependency>
            <dependency>
                <groupId>com.bnppa.ft.cinrj.cinrj-api.mod</groupId>
                <artifactId>BNPPA_CINRJ_HEALTHCHECK</artifactId>
                <version>${cinrj.version}</version>
            </dependency>

            <!-- for the upload and download of files. -->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.3.3</version>
            </dependency>

            <!-- Javax api provided by server -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet.version}</version>
            </dependency>

            <!-- Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring boot -->
            
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-tomcat</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web-services</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- Conversion Json -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <!-- Hibernate -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-ehcache</artifactId>
                <version>${hibernate.version}</version>
            </dependency>

            <!-- Database dependency -->
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${oracle.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jolbox</groupId>
                <artifactId>bonecp</artifactId>
                <version>${bonecp.version}</version>
            </dependency>

            <!-- Logger -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- Test unitaire -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertJ.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <sonar.host.url>http://localhost/sonar</sonar.host.url>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <pluginManagement>
            <plugins>
                <!-- Release -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>

                <!-- Execution -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.6.0</version>
                </plugin>

                <!-- JAR -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>

                <!-- WAR -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>

                <!-- Resources management -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>

                <!-- Quality plugins -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>2.7.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.7.8</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>3.0.4</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>
  <modules>
    <module>server</module>
  </modules>
</project>